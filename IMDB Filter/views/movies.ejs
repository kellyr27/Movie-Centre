<% layout('layouts/boilerplate') %>
<h1>Movies Page</h1>

<!-- Search/Sort/Filter Bar -->
<div>

    <!-- Search -->
    <form method="get" action="/movies/search">
        <div>
            <label for="q">Search: </label>
            <input type="text" name="q" required>
            <button>Search</button>
        </div>
        
    </form>
    
    <!-- Sort -->
    <div>
        <label for="sort">Sort by: </label>
        <select name="sort" id="sort">
            <% for (let i = 0; i < titles.length; i++) { %> 
                <% if (!['URL', 'Genres', 'Directors'].includes(titles[i])) { %> 
                    <option value="<%= titles[i] %>"><%= titles[i] %></option>
                <% } %> 
            <% } %> 
        </select>
        <button id="sortButton">Sort</button>
        <button id="sortAscDes">&#x2191&#x2193</button>
    </div>

    <!-- Filter -->
    <div>
        <label for="filter">Filter by: </label>
        <select name="filter" id="filter">
            <% for (let i = 0; i < titles.length; i++) { %> 
                <% if (!['URL'].includes(titles[i])) { %> 
                    <option value="<%= titles[i] %>"><%= titles[i] %></option>
                <% } %> 
            <% } %> 
        </select>
        <select name="filterOperator" id="filterOperator"></select>
        <span id="filterSpan"></span>
        <button id="filterButton">Filter</button>
    </div>

    <div id="filterClose">
    </div>
    <!-- Clear filters -->
    <form method="get" action="/master">
        <button>Clear All</button>
    </form>
</div>

<!-- Display of the movies in table form -->
<table>
    <thead>
        <tr>
            <th><%= titles[3] %></th>
            <th><%= titles[6] %></th>
            <th><%= titles[8] %></th>
            <th><datalist id="addCol"></datalist></th>
        </tr>
    </thead>
    <tbody id="tableDisplay">
    </tbody>
</table>


<%- include("./scripts/variables/displayList") %> 
<%- include("./scripts/variables/titles") %> 

<%- include("./scripts/sorting") %> 
<%- include("./scripts/filtering") %> 

<script type='text/javascript'>

    let tableDisplay = document.getElementById('tableDisplay')
    let tableColumns = [3, 6, 8]
    
    let headerTr = document.querySelector('thead').children[0]

    // Add dropdown list to display at the end of the table
    function addDropDownTableHeadings() {

        // Add dropdown for adding column
        let thDropdown = document.createElement('select')
        thDropdown.id = 'thDropdown'

        // Add blank select entry
        let headerOptionBlank = document.createElement('option')
        headerOptionBlank.value = -1
        headerOptionBlank.innerHTML = ''
        headerOptionBlank.selected = true
        thDropdown.appendChild(headerOptionBlank)

        headerTr.appendChild(thDropdown)

        // Add entries for all titles not currently displayed
        for (let i = 0; i < titles.length; i++) {
            
            // If the column isnt already displayed
            if (!tableColumns.includes(i)) {
                let headerOption = document.createElement('option')
                headerOption.value = i
                headerOption.innerHTML = titles[i]
                thDropdown.appendChild(headerOption)
            }
        }
    }

    // When new column is selected
    headerTr.addEventListener('change', (evt) => {
        if (evt.target.value !== -1) {
            tableColumns.push(parseInt(evt.target.value))
            updateTable()
            
        }
    })

    // Updates the table after sort/filter
    function updateTable() {

        // Update Table Headings
        headerTr.innerHTML = ''
        for (let col of tableColumns) {
            let th = document.createElement('th')
            th.innerHTML = titles[col]
            headerTr.appendChild(th)

            // Create close buttons for each button
            let removeColButton = document.createElement('button')
            removeColButton.name = 'removeCol'
            removeColButton.value = col
            removeColButton.innerHTML = '-'
            th.appendChild(removeColButton)

            removeColButton.addEventListener('click', (evt) => {

                let index = tableColumns.findIndex((el) => el === parseInt(evt.target.value))
                
                // Remove from the table headers array
                tableColumns.splice(index, 1)

                // Delete the header
                let deleteHeader = document.querySelectorAll('th')[index]
                deleteHeader.remove()

                // Delete the body
                for (let child of tableDisplay.children) {
                    let grandchild = child.children[index]
                    grandchild.remove()
                }
            })
        }

        // Update dropdown for the table
        addDropDownTableHeadings()

        // Update Table body
        tableDisplay.innerHTML = ''

        for (let i = 0; i < displayList.length; i++) {
            let newTr = document.createElement('tr')

            for (let col of tableColumns) {
                let newTd = document.createElement('td')

                // If the column is 'Title', put in a link tag
                if (col === 3) {
                    let newA = document.createElement('a')
                    newA.href = "/movies/" + displayList[i]['Const_IMDB']
                    newA.innerHTML = displayList[i][titles[col]]
                    newTd.appendChild(newA)
                }

                else {
                    newTd.innerHTML = displayList[i][titles[col]]
                }

                // Append the column to the row
                newTr.appendChild(newTd)

            }

            // Append the row to the table
            tableDisplay.appendChild(newTr)
        }
    }

    // Onload functions
    window.onload = function () {
        updateTable()
    }

    // 

</script>